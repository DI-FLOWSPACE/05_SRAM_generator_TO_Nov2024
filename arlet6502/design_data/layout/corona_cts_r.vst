
-- =======================================================================
-- Coriolis Structural VHDL Driver
-- Generated on Nov 18, 2024, 23:02
-- 
-- To be interoperable with Alliance, it uses it's special VHDL subset.
-- ("man vhdl" under Alliance for more informations)
-- =======================================================================

entity corona_cts_r is
  port ( clk_from_pad   : in bit
       ; irq_from_pad   : in bit
       ; nmi_from_pad   : in bit
       ; rdy_from_pad   : in bit
       ; reset_from_pad : in bit
       ; di_from_pad    : in bit_vector(7 downto 0)
       ; we_to_pad      : out bit
       ; do_to_pad      : out bit_vector(7 downto 0)
       ; a_to_pad       : out bit_vector(15 downto 0)
       ; vdd            : linkage bit
       ; vss            : linkage bit
       );
end corona_cts_r;

architecture structural of corona_cts_r is

  component tie
    port ( vdd : in bit
         ; vss : in bit
         );
  end component;

  component diode_w1
    port ( i   : in bit
         ; vdd : in bit
         ; vss : in bit
         );
  end component;

  component decap_w0
    port ( vdd : in bit
         ; vss : in bit
         );
  end component;

  component buf_x4
    port ( i   : in bit
         ; q   : out bit
         ; vdd : in bit
         ; vss : in bit
         );
  end component;

  component arlet6502_cts
    port ( clk                            : in bit
         ; clk_from_pad_root_bl_0         : in bit
         ; clk_from_pad_root_bl_1         : in bit
         ; clk_from_pad_root_bl_2         : in bit
         ; clk_from_pad_root_br_0         : in bit
         ; clk_from_pad_root_br_1         : in bit
         ; clk_from_pad_root_br_2         : in bit
         ; clk_from_pad_root_tl_0         : in bit
         ; clk_from_pad_root_tr_0         : in bit
         ; clk_from_pad_root_tr_1         : in bit
         ; clk_from_pad_root_tr_2         : in bit
         ; irq                            : in bit
         ; nmi                            : in bit
         ; rdy                            : in bit
         ; reset                          : in bit
         ; reset_from_pad_root_tl_0       : in bit
         ; di                             : in bit_vector(7 downto 0)
         ; core_abc_11869_new_n334        : out bit
         ; core_abc_11869_new_n334_hfns_0 : out bit
         ; core_abc_11869_new_n334_hfns_1 : out bit
         ; core_abc_11869_new_n334_hfns_2 : out bit
         ; core_abc_11869_new_n432        : out bit
         ; core_abc_11869_new_n432_hfns_0 : out bit
         ; core_abc_11869_new_n432_hfns_1 : out bit
         ; core_abc_11869_new_n432_hfns_2 : out bit
         ; core_abc_11869_new_n434        : out bit
         ; core_abc_11869_new_n434_hfns_0 : out bit
         ; core_abc_11869_new_n434_hfns_1 : out bit
         ; core_abc_11869_new_n434_hfns_2 : out bit
         ; core_abc_11869_new_n434_hfns_3 : out bit
         ; core_abc_11869_new_n434_hfns_4 : out bit
         ; core_abc_11869_new_n434_hfns_5 : out bit
         ; core_abc_11869_new_n436        : out bit
         ; core_abc_11869_new_n436_hfns_0 : out bit
         ; core_abc_11869_new_n436_hfns_1 : out bit
         ; core_abc_11869_new_n436_hfns_2 : out bit
         ; core_abc_11869_new_n437        : out bit
         ; core_abc_11869_new_n437_hfns_0 : out bit
         ; core_abc_11869_new_n437_hfns_1 : out bit
         ; core_abc_11869_new_n437_hfns_2 : out bit
         ; core_abc_11869_new_n438        : out bit
         ; core_abc_11869_new_n438_hfns_0 : out bit
         ; core_abc_11869_new_n438_hfns_1 : out bit
         ; core_abc_11869_new_n438_hfns_2 : out bit
         ; core_abc_11869_new_n443        : out bit
         ; core_abc_11869_new_n443_hfns_0 : out bit
         ; core_abc_11869_new_n443_hfns_1 : out bit
         ; core_abc_11869_new_n443_hfns_2 : out bit
         ; core_abc_11869_new_n448        : out bit
         ; core_abc_11869_new_n448_hfns_0 : out bit
         ; core_abc_11869_new_n448_hfns_1 : out bit
         ; core_abc_11869_new_n448_hfns_2 : out bit
         ; core_abc_11869_new_n487        : out bit
         ; core_abc_11869_new_n487_hfns_0 : out bit
         ; core_abc_11869_new_n487_hfns_1 : out bit
         ; core_abc_11869_new_n487_hfns_2 : out bit
         ; core_abc_11869_new_n487_hfns_3 : out bit
         ; core_abc_11869_new_n489        : out bit
         ; core_abc_11869_new_n489_hfns_0 : out bit
         ; core_abc_11869_new_n489_hfns_1 : out bit
         ; core_abc_11869_new_n489_hfns_2 : out bit
         ; core_abc_11869_new_n500        : out bit
         ; core_abc_11869_new_n500_hfns_0 : out bit
         ; core_abc_11869_new_n500_hfns_1 : out bit
         ; core_abc_11869_new_n500_hfns_2 : out bit
         ; core_abc_11869_new_n512        : out bit
         ; core_abc_11869_new_n512_hfns_0 : out bit
         ; core_abc_11869_new_n512_hfns_1 : out bit
         ; core_abc_11869_new_n512_hfns_2 : out bit
         ; core_abc_11869_new_n512_hfns_3 : out bit
         ; core_abc_11869_new_n540        : out bit
         ; core_abc_11869_new_n540_hfns_0 : out bit
         ; core_abc_11869_new_n540_hfns_1 : out bit
         ; core_abc_11869_new_n540_hfns_2 : out bit
         ; core_abc_11869_new_n591        : out bit
         ; core_abc_11869_new_n591_hfns_0 : out bit
         ; core_abc_11869_new_n591_hfns_1 : out bit
         ; core_abc_11869_new_n591_hfns_2 : out bit
         ; core_mos6502_state_bit0_hfns_0 : out bit
         ; core_mos6502_state_bit0_hfns_1 : out bit
         ; core_mos6502_state_bit0_hfns_2 : out bit
         ; core_mos6502_state_bit4_hfns_0 : out bit
         ; core_mos6502_state_bit4_hfns_1 : out bit
         ; core_mos6502_state_bit4_hfns_2 : out bit
         ; core_mos6502_state_bit5_hfns_0 : out bit
         ; core_mos6502_state_bit5_hfns_1 : out bit
         ; core_mos6502_state_bit5_hfns_2 : out bit
         ; we                             : out bit
         ; core_mos6502_state_5           : out bit
         ; core_mos6502_state_4           : out bit
         ; core_mos6502_state_0           : out bit
         -- Vector <core_mos6502_state> is holed, unvectorized.
         ; do                             : out bit_vector(7 downto 0)
         ; a                              : out bit_vector(15 downto 0)
         ; vdd                            : in bit
         ; vss                            : in bit
         );
  end component;

  signal blockagenet                    :  bit;
  signal clk_from_pad_root_0            :  bit;
  signal clk_from_pad_root_bl_0         :  bit;
  signal clk_from_pad_root_bl_1         :  bit;
  signal clk_from_pad_root_bl_2         :  bit;
  signal clk_from_pad_root_br_0         :  bit;
  signal clk_from_pad_root_br_1         :  bit;
  signal clk_from_pad_root_br_2         :  bit;
  signal clk_from_pad_root_tl_0         :  bit;
  signal clk_from_pad_root_tl_1         :  bit;
  signal clk_from_pad_root_tl_2         :  bit;
  signal clk_from_pad_root_tr_0         :  bit;
  signal clk_from_pad_root_tr_1         :  bit;
  signal clk_from_pad_root_tr_2         :  bit;
  signal core_abc_11869_new_n334        :  bit;
  signal core_abc_11869_new_n334_hfns_0 :  bit;
  signal core_abc_11869_new_n334_hfns_1 :  bit;
  signal core_abc_11869_new_n334_hfns_2 :  bit;
  signal core_abc_11869_new_n432        :  bit;
  signal core_abc_11869_new_n432_hfns_0 :  bit;
  signal core_abc_11869_new_n432_hfns_1 :  bit;
  signal core_abc_11869_new_n432_hfns_2 :  bit;
  signal core_abc_11869_new_n434        :  bit;
  signal core_abc_11869_new_n434_hfns_0 :  bit;
  signal core_abc_11869_new_n434_hfns_1 :  bit;
  signal core_abc_11869_new_n434_hfns_2 :  bit;
  signal core_abc_11869_new_n434_hfns_3 :  bit;
  signal core_abc_11869_new_n434_hfns_4 :  bit;
  signal core_abc_11869_new_n434_hfns_5 :  bit;
  signal core_abc_11869_new_n436        :  bit;
  signal core_abc_11869_new_n436_hfns_0 :  bit;
  signal core_abc_11869_new_n436_hfns_1 :  bit;
  signal core_abc_11869_new_n436_hfns_2 :  bit;
  signal core_abc_11869_new_n437        :  bit;
  signal core_abc_11869_new_n437_hfns_0 :  bit;
  signal core_abc_11869_new_n437_hfns_1 :  bit;
  signal core_abc_11869_new_n437_hfns_2 :  bit;
  signal core_abc_11869_new_n438        :  bit;
  signal core_abc_11869_new_n438_hfns_0 :  bit;
  signal core_abc_11869_new_n438_hfns_1 :  bit;
  signal core_abc_11869_new_n438_hfns_2 :  bit;
  signal core_abc_11869_new_n443        :  bit;
  signal core_abc_11869_new_n443_hfns_0 :  bit;
  signal core_abc_11869_new_n443_hfns_1 :  bit;
  signal core_abc_11869_new_n443_hfns_2 :  bit;
  signal core_abc_11869_new_n448        :  bit;
  signal core_abc_11869_new_n448_hfns_0 :  bit;
  signal core_abc_11869_new_n448_hfns_1 :  bit;
  signal core_abc_11869_new_n448_hfns_2 :  bit;
  signal core_abc_11869_new_n487        :  bit;
  signal core_abc_11869_new_n487_hfns_0 :  bit;
  signal core_abc_11869_new_n487_hfns_1 :  bit;
  signal core_abc_11869_new_n487_hfns_2 :  bit;
  signal core_abc_11869_new_n487_hfns_3 :  bit;
  signal core_abc_11869_new_n489        :  bit;
  signal core_abc_11869_new_n489_hfns_0 :  bit;
  signal core_abc_11869_new_n489_hfns_1 :  bit;
  signal core_abc_11869_new_n489_hfns_2 :  bit;
  signal core_abc_11869_new_n500        :  bit;
  signal core_abc_11869_new_n500_hfns_0 :  bit;
  signal core_abc_11869_new_n500_hfns_1 :  bit;
  signal core_abc_11869_new_n500_hfns_2 :  bit;
  signal core_abc_11869_new_n512        :  bit;
  signal core_abc_11869_new_n512_hfns_0 :  bit;
  signal core_abc_11869_new_n512_hfns_1 :  bit;
  signal core_abc_11869_new_n512_hfns_2 :  bit;
  signal core_abc_11869_new_n512_hfns_3 :  bit;
  signal core_abc_11869_new_n540        :  bit;
  signal core_abc_11869_new_n540_hfns_0 :  bit;
  signal core_abc_11869_new_n540_hfns_1 :  bit;
  signal core_abc_11869_new_n540_hfns_2 :  bit;
  signal core_abc_11869_new_n591        :  bit;
  signal core_abc_11869_new_n591_hfns_0 :  bit;
  signal core_abc_11869_new_n591_hfns_1 :  bit;
  signal core_abc_11869_new_n591_hfns_2 :  bit;
  signal core_mos6502_state_bit0_hfns_0 :  bit;
  signal core_mos6502_state_bit0_hfns_1 :  bit;
  signal core_mos6502_state_bit0_hfns_2 :  bit;
  signal core_mos6502_state_bit4_hfns_0 :  bit;
  signal core_mos6502_state_bit4_hfns_1 :  bit;
  signal core_mos6502_state_bit4_hfns_2 :  bit;
  signal core_mos6502_state_bit5_hfns_0 :  bit;
  signal core_mos6502_state_bit5_hfns_1 :  bit;
  signal core_mos6502_state_bit5_hfns_2 :  bit;
  signal reset_from_pad_root_0          :  bit;
  signal reset_from_pad_root_bl_0       :  bit;
  signal reset_from_pad_root_br_0       :  bit;
  signal reset_from_pad_root_tl_0       :  bit;
  signal reset_from_pad_root_tr_0       :  bit;
  signal core_mos6502_state_5           :  bit;
  signal core_mos6502_state_4           :  bit;
  signal core_mos6502_state_0           :  bit;
  -- Vector <core_mos6502_state> is holed, unvectorized.;


begin

  diode_47 : diode_w1
  port map ( i   => clk_from_pad
           , vdd => vdd
           , vss => vss
           );

  diode_46 : diode_w1
  port map ( i   => clk_from_pad
           , vdd => vdd
           , vss => vss
           );

  diode_41 : diode_w1
  port map ( i   => reset_from_pad
           , vdd => vdd
           , vss => vss
           );

  spare_feed_20 : decap_w0
  port map ( vdd => vdd
           , vss => vss
           );

  spare_feed_25 : tie
  port map ( vdd => vdd
           , vss => vss
           );

  spare_feed_24 : tie
  port map ( vdd => vdd
           , vss => vss
           );

  spare_feed_23 : decap_w0
  port map ( vdd => vdd
           , vss => vss
           );

  spare_feed_22 : tie
  port map ( vdd => vdd
           , vss => vss
           );

  spare_feed_21 : tie
  port map ( vdd => vdd
           , vss => vss
           );

  spare_feed_9 : tie
  port map ( vdd => vdd
           , vss => vss
           );

  spare_feed_8 : tie
  port map ( vdd => vdd
           , vss => vss
           );

  spare_feed_7 : tie
  port map ( vdd => vdd
           , vss => vss
           );

  spare_feed_6 : tie
  port map ( vdd => vdd
           , vss => vss
           );

  spare_feed_5 : tie
  port map ( vdd => vdd
           , vss => vss
           );

  core : arlet6502_cts
  port map ( clk                            => clk_from_pad
           , clk_from_pad_root_bl_0         => clk_from_pad_root_bl_0
           , clk_from_pad_root_bl_1         => clk_from_pad_root_bl_1
           , clk_from_pad_root_bl_2         => clk_from_pad_root_bl_2
           , clk_from_pad_root_br_0         => clk_from_pad_root_br_0
           , clk_from_pad_root_br_1         => clk_from_pad_root_br_1
           , clk_from_pad_root_br_2         => clk_from_pad_root_br_2
           , clk_from_pad_root_tl_0         => clk_from_pad_root_tl_0
           , clk_from_pad_root_tr_0         => clk_from_pad_root_tr_0
           , clk_from_pad_root_tr_1         => clk_from_pad_root_tr_1
           , clk_from_pad_root_tr_2         => clk_from_pad_root_tr_2
           , irq                            => irq_from_pad
           , nmi                            => nmi_from_pad
           , rdy                            => rdy_from_pad
           , reset                          => reset_from_pad
           , reset_from_pad_root_tl_0       => reset_from_pad_root_tl_0
           , di                             => di_from_pad(7 downto 0)
           , core_abc_11869_new_n334        => core_abc_11869_new_n334
           , core_abc_11869_new_n334_hfns_0 => core_abc_11869_new_n334_hfns_0
           , core_abc_11869_new_n334_hfns_1 => core_abc_11869_new_n334_hfns_1
           , core_abc_11869_new_n334_hfns_2 => core_abc_11869_new_n334_hfns_2
           , core_abc_11869_new_n432        => core_abc_11869_new_n432
           , core_abc_11869_new_n432_hfns_0 => core_abc_11869_new_n432_hfns_0
           , core_abc_11869_new_n432_hfns_1 => core_abc_11869_new_n432_hfns_1
           , core_abc_11869_new_n432_hfns_2 => core_abc_11869_new_n432_hfns_2
           , core_abc_11869_new_n434        => core_abc_11869_new_n434
           , core_abc_11869_new_n434_hfns_0 => core_abc_11869_new_n434_hfns_0
           , core_abc_11869_new_n434_hfns_1 => core_abc_11869_new_n434_hfns_1
           , core_abc_11869_new_n434_hfns_2 => core_abc_11869_new_n434_hfns_2
           , core_abc_11869_new_n434_hfns_3 => core_abc_11869_new_n434_hfns_3
           , core_abc_11869_new_n434_hfns_4 => core_abc_11869_new_n434_hfns_4
           , core_abc_11869_new_n434_hfns_5 => core_abc_11869_new_n434_hfns_5
           , core_abc_11869_new_n436        => core_abc_11869_new_n436
           , core_abc_11869_new_n436_hfns_0 => core_abc_11869_new_n436_hfns_0
           , core_abc_11869_new_n436_hfns_1 => core_abc_11869_new_n436_hfns_1
           , core_abc_11869_new_n436_hfns_2 => core_abc_11869_new_n436_hfns_2
           , core_abc_11869_new_n437        => core_abc_11869_new_n437
           , core_abc_11869_new_n437_hfns_0 => core_abc_11869_new_n437_hfns_0
           , core_abc_11869_new_n437_hfns_1 => core_abc_11869_new_n437_hfns_1
           , core_abc_11869_new_n437_hfns_2 => core_abc_11869_new_n437_hfns_2
           , core_abc_11869_new_n438        => core_abc_11869_new_n438
           , core_abc_11869_new_n438_hfns_0 => core_abc_11869_new_n438_hfns_0
           , core_abc_11869_new_n438_hfns_1 => core_abc_11869_new_n438_hfns_1
           , core_abc_11869_new_n438_hfns_2 => core_abc_11869_new_n438_hfns_2
           , core_abc_11869_new_n443        => core_abc_11869_new_n443
           , core_abc_11869_new_n443_hfns_0 => core_abc_11869_new_n443_hfns_0
           , core_abc_11869_new_n443_hfns_1 => core_abc_11869_new_n443_hfns_1
           , core_abc_11869_new_n443_hfns_2 => core_abc_11869_new_n443_hfns_2
           , core_abc_11869_new_n448        => core_abc_11869_new_n448
           , core_abc_11869_new_n448_hfns_0 => core_abc_11869_new_n448_hfns_0
           , core_abc_11869_new_n448_hfns_1 => core_abc_11869_new_n448_hfns_1
           , core_abc_11869_new_n448_hfns_2 => core_abc_11869_new_n448_hfns_2
           , core_abc_11869_new_n487        => core_abc_11869_new_n487
           , core_abc_11869_new_n487_hfns_0 => core_abc_11869_new_n487_hfns_0
           , core_abc_11869_new_n487_hfns_1 => core_abc_11869_new_n487_hfns_1
           , core_abc_11869_new_n487_hfns_2 => core_abc_11869_new_n487_hfns_2
           , core_abc_11869_new_n487_hfns_3 => core_abc_11869_new_n487_hfns_3
           , core_abc_11869_new_n489        => core_abc_11869_new_n489
           , core_abc_11869_new_n489_hfns_0 => core_abc_11869_new_n489_hfns_0
           , core_abc_11869_new_n489_hfns_1 => core_abc_11869_new_n489_hfns_1
           , core_abc_11869_new_n489_hfns_2 => core_abc_11869_new_n489_hfns_2
           , core_abc_11869_new_n500        => core_abc_11869_new_n500
           , core_abc_11869_new_n500_hfns_0 => core_abc_11869_new_n500_hfns_0
           , core_abc_11869_new_n500_hfns_1 => core_abc_11869_new_n500_hfns_1
           , core_abc_11869_new_n500_hfns_2 => core_abc_11869_new_n500_hfns_2
           , core_abc_11869_new_n512        => core_abc_11869_new_n512
           , core_abc_11869_new_n512_hfns_0 => core_abc_11869_new_n512_hfns_0
           , core_abc_11869_new_n512_hfns_1 => core_abc_11869_new_n512_hfns_1
           , core_abc_11869_new_n512_hfns_2 => core_abc_11869_new_n512_hfns_2
           , core_abc_11869_new_n512_hfns_3 => core_abc_11869_new_n512_hfns_3
           , core_abc_11869_new_n540        => core_abc_11869_new_n540
           , core_abc_11869_new_n540_hfns_0 => core_abc_11869_new_n540_hfns_0
           , core_abc_11869_new_n540_hfns_1 => core_abc_11869_new_n540_hfns_1
           , core_abc_11869_new_n540_hfns_2 => core_abc_11869_new_n540_hfns_2
           , core_abc_11869_new_n591        => core_abc_11869_new_n591
           , core_abc_11869_new_n591_hfns_0 => core_abc_11869_new_n591_hfns_0
           , core_abc_11869_new_n591_hfns_1 => core_abc_11869_new_n591_hfns_1
           , core_abc_11869_new_n591_hfns_2 => core_abc_11869_new_n591_hfns_2
           , core_mos6502_state_bit0_hfns_0 => core_mos6502_state_bit0_hfns_0
           , core_mos6502_state_bit0_hfns_1 => core_mos6502_state_bit0_hfns_1
           , core_mos6502_state_bit0_hfns_2 => core_mos6502_state_bit0_hfns_2
           , core_mos6502_state_bit4_hfns_0 => core_mos6502_state_bit4_hfns_0
           , core_mos6502_state_bit4_hfns_1 => core_mos6502_state_bit4_hfns_1
           , core_mos6502_state_bit4_hfns_2 => core_mos6502_state_bit4_hfns_2
           , core_mos6502_state_bit5_hfns_0 => core_mos6502_state_bit5_hfns_0
           , core_mos6502_state_bit5_hfns_1 => core_mos6502_state_bit5_hfns_1
           , core_mos6502_state_bit5_hfns_2 => core_mos6502_state_bit5_hfns_2
           , we                             => we_to_pad
           , core_mos6502_state_5           => core_mos6502_state_5
           , core_mos6502_state_4           => core_mos6502_state_4
           , core_mos6502_state_0           => core_mos6502_state_0
           , do                             => do_to_pad(7 downto 0)
           , a                              => a_to_pad(15 downto 0)
           , vdd                            => vdd
           , vss                            => vss
           );

  spare_feed_0 : tie
  port map ( vdd => vdd
           , vss => vss
           );

  spare_feed_1 : tie
  port map ( vdd => vdd
           , vss => vss
           );

  spare_feed_2 : tie
  port map ( vdd => vdd
           , vss => vss
           );

  spare_feed_3 : tie
  port map ( vdd => vdd
           , vss => vss
           );

  spare_feed_4 : tie
  port map ( vdd => vdd
           , vss => vss
           );

  spare_buffer_10 : buf_x4
  port map ( i   => clk_from_pad_root_0
           , q   => clk_from_pad_root_br_2
           , vdd => vdd
           , vss => vss
           );

  spare_buffer_11 : buf_x4
  port map ( i   => reset_from_pad_root_0
           , q   => reset_from_pad_root_br_0
           , vdd => vdd
           , vss => vss
           );

  spare_buffer_12 : buf_x4
  port map ( i   => clk_from_pad_root_0
           , q   => clk_from_pad_root_tl_0
           , vdd => vdd
           , vss => vss
           );

  spare_buffer_13 : buf_x4
  port map ( i   => clk_from_pad_root_0
           , q   => clk_from_pad_root_tl_1
           , vdd => vdd
           , vss => vss
           );

  spare_buffer_14 : buf_x4
  port map ( i   => clk_from_pad_root_0
           , q   => clk_from_pad_root_tl_2
           , vdd => vdd
           , vss => vss
           );

  spare_buffer_15 : buf_x4
  port map ( i   => reset_from_pad_root_0
           , q   => reset_from_pad_root_tl_0
           , vdd => vdd
           , vss => vss
           );

  spare_buffer_16 : buf_x4
  port map ( i   => clk_from_pad_root_0
           , q   => clk_from_pad_root_tr_0
           , vdd => vdd
           , vss => vss
           );

  spare_buffer_17 : buf_x4
  port map ( i   => clk_from_pad_root_0
           , q   => clk_from_pad_root_tr_1
           , vdd => vdd
           , vss => vss
           );

  spare_buffer_18 : buf_x4
  port map ( i   => clk_from_pad_root_0
           , q   => clk_from_pad_root_tr_2
           , vdd => vdd
           , vss => vss
           );

  spare_buffer_19 : buf_x4
  port map ( i   => reset_from_pad_root_0
           , q   => reset_from_pad_root_tr_0
           , vdd => vdd
           , vss => vss
           );

  spare_feed_10 : tie
  port map ( vdd => vdd
           , vss => vss
           );

  spare_feed_11 : tie
  port map ( vdd => vdd
           , vss => vss
           );

  spare_feed_12 : tie
  port map ( vdd => vdd
           , vss => vss
           );

  spare_feed_13 : tie
  port map ( vdd => vdd
           , vss => vss
           );

  spare_buffer_9 : buf_x4
  port map ( i   => clk_from_pad_root_0
           , q   => clk_from_pad_root_br_1
           , vdd => vdd
           , vss => vss
           );

  spare_buffer_8 : buf_x4
  port map ( i   => clk_from_pad_root_0
           , q   => clk_from_pad_root_br_0
           , vdd => vdd
           , vss => vss
           );

  spare_buffer_7 : buf_x4
  port map ( i   => reset_from_pad_root_0
           , q   => reset_from_pad_root_bl_0
           , vdd => vdd
           , vss => vss
           );

  spare_buffer_6 : buf_x4
  port map ( i   => clk_from_pad_root_0
           , q   => clk_from_pad_root_bl_2
           , vdd => vdd
           , vss => vss
           );

  spare_buffer_5 : buf_x4
  port map ( i   => clk_from_pad_root_0
           , q   => clk_from_pad_root_bl_1
           , vdd => vdd
           , vss => vss
           );

  spare_buffer_0 : buf_x4
  port map ( i   => clk_from_pad
           , q   => clk_from_pad_root_0
           , vdd => vdd
           , vss => vss
           );

  spare_buffer_3 : buf_x4
  port map ( i   => reset_from_pad
           , q   => reset_from_pad_root_0
           , vdd => vdd
           , vss => vss
           );

  spare_buffer_4 : buf_x4
  port map ( i   => clk_from_pad_root_0
           , q   => clk_from_pad_root_bl_0
           , vdd => vdd
           , vss => vss
           );

  spare_feed_14 : tie
  port map ( vdd => vdd
           , vss => vss
           );

  spare_feed_15 : tie
  port map ( vdd => vdd
           , vss => vss
           );

  spare_feed_16 : tie
  port map ( vdd => vdd
           , vss => vss
           );

  spare_feed_17 : tie
  port map ( vdd => vdd
           , vss => vss
           );

  spare_feed_18 : tie
  port map ( vdd => vdd
           , vss => vss
           );

  spare_feed_19 : tie
  port map ( vdd => vdd
           , vss => vss
           );

end structural;

